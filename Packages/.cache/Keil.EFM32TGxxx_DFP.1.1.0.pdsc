<?xml version="1.0" encoding="UTF-8"?>

<package schemaVersion="1.2" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="PACK.xsd">
  <vendor>Keil</vendor>
  <url>http://www.keil.com/pack/</url>
  <name>EFM32TGxxx_DFP</name>
  <description>Silicon Labs EFM32 Tiny Gecko Series Device Support</description>

  <releases>
    <release version="1.1.0" date="2015-07-31">
      Updated device support files to V4.0.0.
      Added emlib support.
      Added EFM32TG_STK3300 Blinky example.
      Changed Device Vendor to "Silicon Labs:21".
    </release>
    <release version="1.0.1" date="2014-02-20">
      Device description updated with features and flash programming algorithms
    </release>
    <release version="1.0.0">
      First Release version of EFM32TG Device Family Pack.
    </release>
  </releases>

  <keywords>
    <!-- keywords for indexing -->
    <keyword>Silicon Labs</keyword>
    <keyword>EFM32TG</keyword>
    <keyword>EFM32</keyword>
    <keyword>Gecko</keyword>
  </keywords>

  <devices>
    <family Dfamily="EFM32TG Series" Dvendor="Silicon Labs:21">
      <processor Dcore="Cortex-M3" DcoreVersion="r2p1" Dfpu="0" Dmpu="1" Dendian="Little-endian"/>
      <processor Dclock="32000000"/>

      <book name="Documents\dui0552a_cortex_m3_dgug.pdf" title="Cortex-M3 Generic User Guide"/>
      <book name="Documents\EFM32TG-RM.pdf"              title="EFM32TG Reference Manual"/>
      <description>
Silicon Labsâ€™ EFM32 Tiny Gecko 32-bit microcontroller (MCU) family features autonomous and energy efficient peripherals, high overall chip and analog integration, and the performance of the industry standard ARM Cortex-M3 processor.
Available in packages as small as 4 mm x 4 mm, the Tiny Gecko MCUs consume as little as 150 uA/MHz in run mode and as little as 1 uA with a real time counter running, brown-out and full RAM and register retention, making them ideal for energy-sensitive applications.
      </description>

      <feature type="Other"         n="1"                           name="Low Energy Sensor Interface (LESENSE)"/>

      <!-- ************************  Subfamily 'EFM32TG842'  **************************** -->
      <subFamily DsubFamily="EFM32TG842">
        <feature type="LCD"           n="1"                           name="Integrated LCD Controller for up to 8x {36|34|20|18|16} segments"/>
        <feature type="USBD"          n="1"/>
        <feature type="AnalogOther"   n="3"                           name="Operational Amplifier"/>
        <feature type="IOs"           n="53"                          name="General Purpose I/O pins"/>
        <feature type="Crypto"        n="1"                           name="Hardware AES with 128/256-bit keys in 54/75 cycles"/>
        <feature type="ADC"           n="1"       m="12"              name="12-bit 1 Msamples/s Analog to Digital Converter"/>

        <book name="Documents\EFM32TG842.pdf" title="EFM32TG842 Data Sheet"/>

        <!-- *************************  Device 'EFM32TG842F32'  ***************************** -->
        <device Dname="EFM32TG842F32">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG842F32"/>
          <debug svd="SVD\EFM32TG\EFM32TG842F32.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00008000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00001000" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00008000"             default="1"/>
        </device>

        <!-- *************************  Device 'EFM32TG842F16'  ***************************** -->
        <device Dname="EFM32TG842F16">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG842F16"/>
          <debug svd="SVD\EFM32TG\EFM32TG842F16.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00004000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00001000" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00004000"             default="1"/>
        </device>

        <!-- *************************  Device 'EFM32TG842F8'  ***************************** -->
        <device Dname="EFM32TG842F8">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG842F8"/>
          <debug svd="SVD\EFM32TG\EFM32TG842F8.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00002000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00000800" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00002000"             default="1"/>
        </device>
      </subFamily>

      <!-- ************************  Subfamily 'EFM32TG840'  **************************** -->
      <subFamily DsubFamily="EFM32TG840">
        <feature type="LCD"           n="1"                           name="Integrated LCD Controller for up to 8x {36|34|20|18|16} segments"/>
        <feature type="USBD"          n="1"/>
        <feature type="AnalogOther"   n="3"                           name="Operational Amplifier"/>
        <feature type="IOs"           n="56"                          name="General Purpose I/O pins"/>
        <feature type="Crypto"        n="1"                           name="Hardware AES with 128/256-bit keys in 54/75 cycles"/>
        <feature type="ADC"           n="1"       m="12"              name="12-bit 1 Msamples/s Analog to Digital Converter"/>

        <book name="Documents\EFM32TG840.pdf" title="EFM32TG840 Data Sheet"/>

        <!-- *************************  Device 'EFM32TG840F32'  ***************************** -->
        <device Dname="EFM32TG840F32">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG840F32"/>
          <debug svd="SVD\EFM32TG\EFM32TG840F32.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00008000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00001000" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00008000"             default="1"/>
        </device>

        <!-- *************************  Device 'EFM32TG840F16'  ***************************** -->
        <device Dname="EFM32TG840F16">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG840F16"/>
          <debug svd="SVD\EFM32TG\EFM32TG840F16.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00004000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00001000" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00004000"             default="1"/>
        </device>

        <!-- *************************  Device 'EFM32TG840F8'  ***************************** -->
        <device Dname="EFM32TG840F8">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG840F8"/>
          <debug svd="SVD\EFM32TG\EFM32TG840F8.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00002000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00000800" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00002000"             default="1"/>
        </device>
      </subFamily>

      <!-- ************************  Subfamily 'EFM32TG825'  **************************** -->
      <subFamily DsubFamily="EFM32TG825">
        <feature type="LCD"           n="1"                           name="Integrated LCD Controller for up to 8x {36|34|20|18|16} segments"/>
        <feature type="USBD"          n="1"/>
        <feature type="AnalogOther"   n="3"                           name="Operational Amplifier"/>
        <feature type="IOs"           n="37"                          name="General Purpose I/O pins"/>
        <feature type="Crypto"        n="1"                           name="Hardware AES with 128/256-bit keys in 54/75 cycles"/>
        <feature type="ADC"           n="1"       m="12"              name="12-bit 1 Msamples/s Analog to Digital Converter"/>

        <book name="Documents\EFM32TG825.pdf" title="EFM32TG825 Data Sheet"/>

        <!-- *************************  Device 'EFM32TG825F32'  ***************************** -->
        <device Dname="EFM32TG825F32">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG825F32"/>
          <debug svd="SVD\EFM32TG\EFM32TG825F32.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00008000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00001000" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00008000"             default="1"/>
        </device>

        <!-- *************************  Device 'EFM32TG825F16'  ***************************** -->
        <device Dname="EFM32TG825F16">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG825F16"/>
          <debug svd="SVD\EFM32TG\EFM32TG825F16.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00004000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00001000" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00004000"             default="1"/>
        </device>

        <!-- *************************  Device 'EFM32TG825F8'  ***************************** -->
        <device Dname="EFM32TG825F8">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG825F8"/>
          <debug svd="SVD\EFM32TG\EFM32TG825F8.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00002000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00000800" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00002000"             default="1"/>
        </device>
      </subFamily>

      <!-- ************************  Subfamily 'EFM32TG822'  **************************** -->
      <subFamily DsubFamily="EFM32TG822">
        <feature type="LCD"           n="1"                           name="Integrated LCD Controller for up to 8x {36|34|20|18|16} segments"/>
        <feature type="USBD"          n="1"/>
        <feature type="AnalogOther"   n="3"                           name="Operational Amplifier"/>
        <feature type="IOs"           n="37"                          name="General Purpose I/O pins"/>
        <feature type="Crypto"        n="1"                           name="Hardware AES with 128/256-bit keys in 54/75 cycles"/>
        <feature type="ADC"           n="1"       m="12"              name="12-bit 1 Msamples/s Analog to Digital Converter"/>

        <book name="Documents\EFM32TG822.pdf" title="EFM32TG822 Data Sheet"/>

        <!-- *************************  Device 'EFM32TG822F32'  ***************************** -->
        <device Dname="EFM32TG822F32">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG822F32"/>
          <debug svd="SVD\EFM32TG\EFM32TG822F32.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00008000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00001000" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00008000"             default="1"/>
        </device>

        <!-- *************************  Device 'EFM32TG822F16'  ***************************** -->
        <device Dname="EFM32TG822F16">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG822F16"/>
          <debug svd="SVD\EFM32TG\EFM32TG822F16.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00004000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00001000" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00004000"             default="1"/>
        </device>

        <!-- *************************  Device 'EFM32TG822F8'  ***************************** -->
        <device Dname="EFM32TG822F8">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG822F8"/>
          <debug svd="SVD\EFM32TG\EFM32TG822F8.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00002000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00000800" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00002000"             default="1"/>
        </device>
      </subFamily>

      <!-- ************************  Subfamily 'EFM32TG232'  **************************** -->
      <subFamily DsubFamily="EFM32TG232">
        <feature type="USBD"          n="1"/>
        <feature type="AnalogOther"   n="3"                           name="Operational Amplifier"/>
        <feature type="IOs"           n="53"                          name="General Purpose I/O pins"/>
        <feature type="Crypto"        n="1"                           name="Hardware AES with 128/256-bit keys in 54/75 cycles"/>
        <feature type="ADC"           n="1"       m="12"              name="12-bit 1 Msamples/s Analog to Digital Converter"/>

        <book name="Documents\EFM32TG232.pdf" title="EFM32TG232 Data Sheet"/>

        <!-- *************************  Device 'EFM32TG232F32'  ***************************** -->
        <device Dname="EFM32TG232F32">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG232F32"/>
          <debug svd="SVD\EFM32TG\EFM32TG232F32.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00008000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00001000" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00008000"             default="1"/>
        </device>

        <!-- *************************  Device 'EFM32TG232F16'  ***************************** -->
        <device Dname="EFM32TG232F16">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG232F16"/>
          <debug svd="SVD\EFM32TG\EFM32TG232F16.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00004000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00001000" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00004000"             default="1"/>
        </device>

        <!-- *************************  Device 'EFM32TG232F8'  ***************************** -->
        <device Dname="EFM32TG232F8">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG232F8"/>
          <debug svd="SVD\EFM32TG\EFM32TG232F8.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00002000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00000800" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00002000"             default="1"/>
        </device>
      </subFamily>

      <!-- ************************  Subfamily 'EFM32TG230'  **************************** -->
      <subFamily DsubFamily="EFM32TG230">
        <feature type="AnalogOther"   n="3"                           name="Operational Amplifier"/>
        <feature type="IOs"           n="56"                          name="General Purpose I/O pins"/>
        <feature type="Crypto"        n="1"                           name="Hardware AES with 128/256-bit keys in 54/75 cycles"/>
        <feature type="ADC"           n="1"       m="12"              name="12-bit 1 Msamples/s Analog to Digital Converter"/>

        <book name="Documents\EFM32TG230.pdf" title="EFM32TG230 Data Sheet"/>

        <!-- *************************  Device 'EFM32TG230F32'  ***************************** -->
        <device Dname="EFM32TG230F32">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG230F32"/>
          <debug svd="SVD\EFM32TG\EFM32TG230F32.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00008000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00001000" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00008000"             default="1"/>
        </device>

        <!-- *************************  Device 'EFM32TG230F16'  ***************************** -->
        <device Dname="EFM32TG230F16">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG230F16"/>
          <debug svd="SVD\EFM32TG\EFM32TG230F16.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00004000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00001000" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00004000"             default="1"/>
        </device>

        <!-- *************************  Device 'EFM32TG230F8'  ***************************** -->
        <device Dname="EFM32TG230F8">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG230F8"/>
          <debug svd="SVD\EFM32TG\EFM32TG230F8.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00002000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00000800" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00002000"             default="1"/>
        </device>
      </subFamily>

      <!-- ************************  Subfamily 'EFM32TG225'  **************************** -->
      <subFamily DsubFamily="EFM32TG225">
        <feature type="AnalogOther"   n="3"                           name="Operational Amplifier"/>
        <feature type="IOs"           n="37"                          name="General Purpose I/O pins"/>
        <feature type="Crypto"        n="1"                           name="Hardware AES with 128/256-bit keys in 54/75 cycles"/>
        <feature type="ADC"           n="1"       m="12"              name="12-bit 1 Msamples/s Analog to Digital Converter"/>

        <book name="Documents\EFM32TG225.pdf" title="EFM32TG225 Data Sheet"/>

        <!-- *************************  Device 'EFM32TG225F32'  ***************************** -->
        <device Dname="EFM32TG225F32">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG225F32"/>
          <debug svd="SVD\EFM32TG\EFM32TG225F32.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00008000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00001000" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00008000"             default="1"/>
        </device>

        <!-- *************************  Device 'EFM32TG225F16'  ***************************** -->
        <device Dname="EFM32TG225F16">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG225F16"/>
          <debug svd="SVD\EFM32TG\EFM32TG225F16.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00004000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00001000" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00004000"             default="1"/>
        </device>

        <!-- *************************  Device 'EFM32TG225F8'  ***************************** -->
        <device Dname="EFM32TG225F8">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG225F8"/>
          <debug svd="SVD\EFM32TG\EFM32TG225F8.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00002000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00000800" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00002000"             default="1"/>
        </device>
      </subFamily>

      <!-- ************************  Subfamily 'EFM32TG222'  **************************** -->
      <subFamily DsubFamily="EFM32TG222">
        <feature type="AnalogOther"   n="3"                           name="Operational Amplifier"/>
        <feature type="IOs"           n="37"                          name="General Purpose I/O pins"/>
        <feature type="Crypto"        n="1"                           name="Hardware AES with 128/256-bit keys in 54/75 cycles"/>
        <feature type="ADC"           n="1"       m="12"              name="12-bit 1 Msamples/s Analog to Digital Converter"/>

        <book name="Documents\EFM32TG222.pdf" title="EFM32TG222 Data Sheet"/>

        <!-- *************************  Device 'EFM32TG222F32'  ***************************** -->
        <device Dname="EFM32TG222F32">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG222F32"/>
          <debug svd="SVD\EFM32TG\EFM32TG222F32.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00008000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00001000" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00008000"             default="1"/>
        </device>

        <!-- *************************  Device 'EFM32TG222F16'  ***************************** -->
        <device Dname="EFM32TG222F16">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG222F16"/>
          <debug svd="SVD\EFM32TG\EFM32TG222F16.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00004000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00001000" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00004000"             default="1"/>
        </device>

        <!-- *************************  Device 'EFM32TG222F8'  ***************************** -->
        <device Dname="EFM32TG222F8">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG222F8"/>
          <debug svd="SVD\EFM32TG\EFM32TG222F8.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00002000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00000800" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00002000"             default="1"/>
        </device>
      </subFamily>

      <!-- ************************  Subfamily 'EFM32TG210'  **************************** -->
      <subFamily DsubFamily="EFM32TG210">
        <feature type="AnalogOther"   n="3"                           name="Operational Amplifier"/>
        <feature type="IOs"           n="24"                          name="General Purpose I/O pins"/>
        <feature type="Crypto"        n="1"                           name="Hardware AES with 128/256-bit keys in 54/75 cycles"/>
        <feature type="ADC"           n="1"       m="12"              name="12-bit 1 Msamples/s Analog to Digital Converter"/>

        <book name="Documents\EFM32TG210.pdf" title="EFM32TG210 Data Sheet"/>

        <!-- *************************  Device 'EFM32TG210F32'  ***************************** -->
        <device Dname="EFM32TG210F32">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG210F32"/>
          <debug svd="SVD\EFM32TG\EFM32TG210F32.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00008000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00001000" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00008000"             default="1"/>
        </device>

        <!-- *************************  Device 'EFM32TG210F16'  ***************************** -->
        <device Dname="EFM32TG210F16">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG210F16"/>
          <debug svd="SVD\EFM32TG\EFM32TG210F16.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00004000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00001000" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00004000"             default="1"/>
        </device>

        <!-- *************************  Device 'EFM32TG210F8'  ***************************** -->
        <device Dname="EFM32TG210F8">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG210F8"/>
          <debug svd="SVD\EFM32TG\EFM32TG210F8.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00002000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00000800" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00002000"             default="1"/>
        </device>
      </subFamily>

      <!-- ************************  Subfamily 'EFM32TG110'  **************************** -->
      <subFamily DsubFamily="EFM32TG110">
        <feature type="AnalogOther"   n="3"                           name="Operational Amplifier"/>
        <feature type="IOs"           n="17"                          name="General Purpose I/O pins"/>
        <feature type="Crypto"        n="1"                           name="Hardware AES with 128/256-bit keys in 54/75 cycles"/>
        <feature type="ADC"           n="1"       m="12"              name="12-bit 1 Msamples/s Analog to Digital Converter"/>

        <book name="Documents\EFM32TG110.pdf" title="EFM32TG110 Data Sheet"/>

        <!-- *************************  Device 'EFM32TG110F32'  ***************************** -->
        <device Dname="EFM32TG110F32">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG110F32"/>
          <debug svd="SVD\EFM32TG\EFM32TG110F32.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00008000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00001000" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00008000"             default="1"/>
        </device>

        <!-- *************************  Device 'EFM32TG110F16'  ***************************** -->
        <device Dname="EFM32TG110F16">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG110F16"/>
          <debug svd="SVD\EFM32TG\EFM32TG110F16.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00004000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00001000" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00004000"             default="1"/>
        </device>

        <!-- *************************  Device 'EFM32TG110F8'  ***************************** -->
        <device Dname="EFM32TG110F8">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG110F8"/>
          <debug svd="SVD\EFM32TG\EFM32TG110F8.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00002000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00000800" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00002000"             default="1"/>
        </device>

        <!-- *************************  Device 'EFM32TG110F4'  ***************************** -->
        <device Dname="EFM32TG110F4">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG110F4"/>
          <debug svd="SVD\EFM32TG\EFM32TG110F4.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00001000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00000800" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00001000"             default="1"/>

          <feature type="USBD"          n="1"/>
        </device>
      </subFamily>

      <!-- ************************  Subfamily 'EFM32TG108'  **************************** -->
      <subFamily DsubFamily="EFM32TG108">
        <feature type="USBD"          n="1"/>
        <feature type="IOs"           n="17"                          name="General Purpose I/O pins"/>

        <book name="Documents\EFM32TG108.pdf" title="EFM32TG108 Data Sheet"/>

        <!-- *************************  Device 'EFM32TG108F32'  ***************************** -->
        <device Dname="EFM32TG108F32">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG108F32"/>
          <debug svd="SVD\EFM32TG\EFM32TG108F32.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00008000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00001000" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00008000"             default="1"/>
        </device>

        <!-- *************************  Device 'EFM32TG108F16'  ***************************** -->
        <device Dname="EFM32TG108F16">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG108F16"/>
          <debug svd="SVD\EFM32TG\EFM32TG108F16.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00004000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00001000" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00004000"             default="1"/>
        </device>

        <!-- *************************  Device 'EFM32TG108F8'  ***************************** -->
        <device Dname="EFM32TG108F8">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG108F8"/>
          <debug svd="SVD\EFM32TG\EFM32TG108F8.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00002000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00000800" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00002000"             default="1"/>
        </device>

        <!-- *************************  Device 'EFM32TG108F4'  ***************************** -->
        <device Dname="EFM32TG108F4">
          <compile header="Device\EFM32TG\Include\em_device.h" define="EFM32TG108F4"/>
          <debug svd="SVD\EFM32TG\EFM32TG108F4.svd"/>
          <memory id="IROM1"                start="0x00000000" size="0x00001000" startup="1" default="1"/>
          <memory id="IRAM1"                start="0x20000000" size="0x00000800" init   ="0" default="1"/>
          <algorithm name="Flash\EFM32.FLM" start="0x00000000" size="0x00001000"             default="1"/>
        </device>
      </subFamily>

    </family>
  </devices>

  <conditions>
    <!-- Compiler Conditions -->
    <condition id="Compiler ARMCC">
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="Compiler GCC">
      <require Tcompiler="GCC"/>
    </condition>

    <!-- Device Conditions -->
    <condition id="EFM32TG">
      <description>Silicon Labs EFM32TG device series</description>
      <require Dvendor="Silicon Labs:21" Dname="EFM32TG*"/>
    </condition>

    <!-- Device + CMSIS Conditions -->
    <condition id="EFM32TG CMSIS">
      <description>Silicon Labs EFM32TG device series and CMSIS Core</description>
      <require condition="EFM32TG"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <!-- emlib Conditions -->
    <condition id="emlib Framework">
      <description>Silicon Labs emlib Framework</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="Framework"/>
    </condition>
    <condition id="emlib SYSTEM">
      <description>Silicon Labs emlib with SYSTEM</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="Framework"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="SYSTEM"/>
    </condition>
    <condition id="emlib EMU">
      <description>Silicon Labs emlib with EMU</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="Framework"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="EMU"/>
    </condition>
    <condition id="emlib CMU">
      <description>Silicon Labs emlib with CMU</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="Framework"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="CMU"/>
    </condition>
    <condition id="emlib CMU GPIO">
      <description>Silicon Labs emlib with CMU and GPIO</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="Framework"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="CMU"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="GPIO"/>
    </condition>
    <condition id="emlib CMU INT">
      <description>Silicon Labs emlib with CMU and INT</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="Framework"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="CMU"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="INT"/>
    </condition>

    <!-- emdrv Conditions -->
<!-- emdrv Conditions not added
    <condition id="emdrv DMADRV">
      <description>Silicon Labs Driver DMADRV</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="CMU"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="DMA"/>
      <require Cclass="Board Support" Cgroup="Drivers" Csub="DmaCtrl"/>
    </condition>
    <condition id="emdrv GPIOINT">
      <description>Silicon Labs Driver GPIOINT</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="GPIO"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="INT"/>
    </condition>
    <condition id="emdrv NVM">
      <description>Silicon Labs Driver NVM</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="MSC"/>
    </condition>
    <condition id="emdrv RTCDRV">
      <description>Silicon Labs Driver RTCDRV</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="CMU"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="INT"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="RTC"/>
    </condition>
    <condition id="emdrv SLEEP">
      <description>Silicon Labs Driver SLEEP</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="INT"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="RMU"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="EMU"/>
    </condition>
    <condition id="emdrv SPIDRV">
      <description>Silicon Labs Driver SPIDRV</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="GPIO"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="INT"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="DMA"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="USART"/>
      <require Cclass="Device"        Cgroup="emdrv"   Csub="RTCDRV"/>
      <require Cclass="Device"        Cgroup="emdrv"   Csub="DMADRV"/>
    </condition>
    <condition id="emdrv UARTDRV">
      <description>Silicon Labs Driver UARTDRV</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="EMU"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="USART"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="DMA"/>
      <require Cclass="Device"        Cgroup="emdrv"   Csub="GPIOINT"/>
      <require Cclass="Device"        Cgroup="emdrv"   Csub="DMADRV"/>
      <require Cclass="Board Support" Cgroup="Drivers" Csub="DmaCtrl"/>
    </condition>
    <condition id="emdrv USTIMER">
      <description>Silicon Labs Driver USTIMER</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="Framework"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="CMU"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="EMU"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="INT"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="TIMER"/>
    </condition>
emdrv Conditions not added -->

<!-- glib Conditions not added -->

    <!-- bsp Conditions -->
    <condition id="EFM32TG BSP core">
      <description>EFM32TG STK3300 Board Support Core</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="GPIO"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="CMU"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="EBI"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="MSC"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="USART"/>
    </condition>

    <condition id="EFM32TG BSP">
      <description>EFM32TG Board Support Package</description>
      <require condition="EFM32TG"/>
      <require Cclass="Board Support" Cgroup="CORE"/>
    </condition>

<!-- start BSP Driver Conditions
    <condition id="EFM32TG BSP ADC">
      <description>EFM32TG BSP with ADC</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="ADC"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="CMU"/>
      <require Cclass="Board Support" Cgroup="CORE"/>
    </condition>
    <condition id="EFM32TG BSP EEPROM">
      <description>EFM32TG BSP with EEPROM</description>
      <require condition="EFM32TG"/>
      <require Cclass="Board Support" Cgroup="CORE"/>
      <require Cclass="Board Support" Cgroup="Drivers" Csub="Eeprom"/>
    </condition>
    <condition id="EFM32TG BSP TempSensor">
      <description>EFM32TG BSP with TempSensor</description>
      <require condition="EFM32TG"/>
      <require Cclass="Board Support" Cgroup="CORE"/>
      <require Cclass="Board Support" Cgroup="Drivers" Csub="TempSensor"/>
    </condition>
    <condition id="EFM32TG BSP Touch">
      <description>EFM32TG BSP with Touch</description>
      <require condition="EFM32TG"/>
      <require Cclass="Board Support" Cgroup="CORE"/>
      <require Cclass="Board Support" Cgroup="Drivers" Csub="Touch"/>
    </condition>
    <condition id="EFM32TG BSP GLIB TFT">
      <description>EFM32TG BSP with glib and TFT</description>
      <require condition="EFM32TG"/>
      <require Cclass="Graphics"      Cgroup="CORE"/>
      <require Cclass="Board Support" Cgroup="CORE"/>
      <accept  Cclass="Board Support" Cgroup="Drivers" Csub="Tft" Cvariant="EBI"/>
      <accept  Cclass="Board Support" Cgroup="Drivers" Csub="Tft" Cvariant="RGB"/>
    </condition>
    <condition id="BSP Driver CapSense">
      <description>BSP Driver CapSense</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="EMU"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="ACMP"/>
      <require Cclass="Board Support" Cgroup="CORE"/>
    </condition>
    <condition id="BSP Driver CapSense LE">
      <description>BSP Driver CapSense (Low Energy)</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="EMU"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="CMU"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="INT"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="GPIO"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="ACMP"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="LESENSE"/>
      <require Cclass="Board Support" Cgroup="CORE"/>
    </condition>
    <condition id="BSP Driver Display">
      <description>BSP Driver Display</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="CMU"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="GPIO"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="USART"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="RTC"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="PRS"/>
      <require Cclass="Board Support" Cgroup="CORE"/>
      <require Cclass="Board Support" Cgroup="Drivers" Csub="Udelay"/>
    </condition>
    <condition id="BSP Driver DmaCtrl">
      <description>BSP Driver DmaCtrl</description>
      <require condition="EFM32TG"/>
    </condition>
    <condition id="BSP Driver Eeprom">
      <description>BSP Driver Eeprom</description>
      <require condition="EFM32TG"/>
      <require Cclass="Board Support" Cgroup="Drivers" Csub="I2cSpm"/>
    </condition>
    <condition id="BSP Driver I2cSpm">
      <description>BSP Driver I2cSpm</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="CMU"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="GPIO"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="I2C"/>
      <require Cclass="Board Support" Cgroup="CORE"/>
    </condition>
    <condition id="BSP Driver Ksz8851snl SPI">
      <description>BSP Driver Ksz8851snl SPI</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="CMU"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="GPIO"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="USART"/>
    </condition>
    <condition id="BSP Driver Ksz8851snl">
      <description>BSP Driver Ksz8851snl</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="GPIO"/>
      <require Cclass="Board Support" Cgroup="Drivers" Csub="Ksz8851snl_spi"/>
    </condition>
    <condition id="BSP Driver NandFlash">
      <description>BSP Driver NandFlash</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="EBI"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="DMA"/>
      <require Cclass="Board Support" Cgroup="Drivers" Csub="DmaCtrl"/>
    </condition>
    <condition id="BSP Driver NorFlash">
      <description>BSP Driver NorFlash</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="EBI"/>
    </condition>
    <condition id="BSP Driver RetargetIo Serial">
      <description>BSP Driver RetargetIo (Serial)</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="CMU"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="INT"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="GPIO"/>
      <accept  Cclass="Device"        Cgroup="emlib"   Csub="USART"/>
      <require Cclass="Board Support" Cgroup="CORE"/>
    </condition>
    <condition id="BSP Driver RetargetIo TextDisplay">
      <description>BSP Driver RetargetIo (TextDisplay)</description>
      <require condition="EFM32TG"/>
      <require Cclass="Board Support" Cgroup="CORE"/>
      <require Cclass="Board Support" Cgroup="Drivers" Csub="TextDisplay"/>
    </condition>
    <condition id="BSP Driver RetargetIo Tft">
      <description>BSP Driver RetargetIo (Tft)</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="EBI"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="CMU"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="GPIO"/>
      <accept  Cclass="Graphics"      Cgroup="Display Driver" Cvariant="*-bit IF"/>
      <accept  Cclass="Graphics"      Cgroup="Display Driver" Cvariant="*SPI IF"/>
    </condition>
    <condition id="BSP Driver RtcDrv">
      <description>BSP Driver RtcDrv</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="EMU"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="CMU"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="RTC"/>
    </condition>
    <condition id="BSP Driver SegmentLcd">
      <description>BSP Driver SegmentLcd</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="CMU"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="GPIO"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="LCD"/>
      <require Cclass="Board Support" Cgroup="CORE"/>
    </condition>
    <condition id="BSP Driver Si114x">
      <description>BSP Driver Si7013</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emdrv"   Csub="RTCDRV"/>
      <require Cclass="Board Support" Cgroup="Drivers" Csub="I2cSpm"/>
    </condition>
    <condition id="BSP Driver Si7013">
      <description>BSP Driver Si7013</description>
      <require condition="EFM32TG"/>
      <require Cclass="Board Support" Cgroup="Drivers" Csub="I2cSpm"/>
    </condition>
    <condition id="BSP Driver TempSensor">
      <description>BSP Driver TempSensor</description>
      <require condition="EFM32TG"/>
      <require Cclass="Board Support" Cgroup="Drivers" Csub="I2cSpm"/>
    </condition>
    <condition id="BSP Driver TextDisplay">
      <description>BSP Driver TextDisplay</description>
      <require condition="EFM32TG"/>
      <require Cclass="Board Support" Cgroup="CORE"/>
      <require Cclass="Board Support" Cgroup="Drivers" Csub="Display"/>
    </condition>
    <condition id="BSP Driver Tft EBI">
      <description>BSP Driver Tft (EBI)</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="EBI"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="GPIO"/>
      <require Cclass="Board Support" Cgroup="CORE"/>
      <require Cclass="Graphics"      Cgroup="Display Driver" Cvariant="*-bit IF"/>
    </condition>
    <condition id="BSP Driver Tft RGB">
      <description>BSP Driver Tft (RGB)</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="EBI"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="GPIO"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="USART"/>
      <require Cclass="Board Support" Cgroup="CORE"/>
      <require Cclass="Graphics"      Cgroup="Display Driver" Cvariant="*RGB IF"/>
    </condition>
    <condition id="BSP Driver Touch">
      <description>BSP Driver Touch</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="ADC"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="CMU"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="GPIO"/>
      <require Cclass="Board Support" Cgroup="Drivers" Csub="I2cSpm"/>
      <require Cclass="Board Support" Cgroup="Drivers" Csub="Eeprom"/>
    </condition>
    <condition id="BSP Driver Udelay">
      <description>BSP Driver Udelay</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="CMU"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="INT"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="RTC"/>
    </condition>
    <condition id="BSP Driver VddCheck">
      <description>BSP Driver VddCheck</description>
      <require condition="EFM32TG"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="CMU"/>
      <require Cclass="Device"        Cgroup="emlib"   Csub="VCMP"/>
    </condition>
end BSP Driver Conditions -->

  </conditions>

  <taxonomy>
    <description Cclass="Device" Cgroup="emlib" doc="emlib\doc\html\index.html">Silicon Labs EFM32 emlib Peripheral Library</description>
  </taxonomy>

  <components>
    <!-- Startup EFM32TG -->
    <component Cclass="Device" Cgroup="Startup" Cversion="4.0.0" condition="EFM32TG CMSIS">
      <description>System Startup for Silicon Labs EFM32TG device series</description>
      <files>
        <file category="doc"     name="Device\EFM32TG\Documentation\html\index.html"/>

        <file category="include" name="Device\EFM32TG\Include\"/>
        <file category="source"  name="Device\EFM32TG\Source\ARM\startup_efm32tg.s" attr="config" version="4.0.0" condition="Compiler ARMCC"/>
        <file category="source"  name="Device\EFM32TG\Source\GCC\startup_efm32tg.S" attr="config" version="4.0.0" condition="Compiler GCC"  />
        <file category="source"  name="Device\EFM32TG\Source\system_efm32tg.c"      attr="config" version="4.0.0"/>
        <!-- device configuration required by drivers at the moment -->
        <!--file category="header"  name="RTE_Driver\Config\RTE_Device.h" attr="config" version="2.00"/-->
      </files>
    </component>

    <!-- emlib EFM32TG -->
    <component Cclass="Device" Cgroup="emlib" Csub="Framework" Cversion="4.0.0" condition="EFM32TG">
      <description>emlib Framework</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_FRAMEWORK
      </RTE_Components_h>
      <files>
        <file category="header"  name="emlib\inc\em_common.h"/>
        <file category="header"  name="emlib\inc\em_chip.h"/>
        <file category="header"  name="emlib\inc\em_bitband.h"/>
        <file category="header"  name="emlib\inc\em_version.h"/>
        <file category="header"  name="emlib\inc\em_assert.h"/>
        <file category="source"  name="emlib\src\em_assert.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emlib" Csub="ACMP"    Cversion="4.0.0" condition="emlib Framework">
      <description>Analog comparator (ACMP) Peripheral</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_ACMP
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emlib\doc\html\group__ACMP.html"/>
        <file category="header"  name="emlib\inc\em_acmp.h"/>
        <file category="source"  name="emlib\src\em_acmp.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emlib" Csub="ADC"     Cversion="4.0.0" condition="emlib CMU">
      <description>Analog to Digital Converter (ADC) Peripheral</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_ADC
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emlib\doc\html\group__ADC.html"/>
        <file category="header"  name="emlib\inc\em_adc.h"/>
        <file category="source"  name="emlib\src\em_adc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emlib" Csub="AES"     Cversion="4.0.0" condition="emlib Framework">
      <description>Advanced Encryption Standard Accelerator (AES) Peripheral</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_AES
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emlib\doc\html\group__AES.html"/>
        <file category="header"  name="emlib\inc\em_aes.h"/>
        <file category="source"  name="emlib\src\em_aes.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emlib" Csub="BURTC"   Cversion="4.0.0" condition="emlib Framework">
      <description>Backup Real Time Counter (BURTC) Peripheral</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_BURTC
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emlib\doc\html\group__BURTC.html"/>
        <file category="header"  name="emlib\inc\em_burtc.h"/>
        <file category="source"  name="emlib\src\em_burtc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emlib" Csub="CMU"     Cversion="4.0.0" condition="emlib EMU">
      <description>Clock management unit (CMU) Peripheral</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_CMU
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emlib\doc\html\group__CMU.html"/>
        <file category="header"  name="emlib\inc\em_cmu.h"/>
        <file category="source"  name="emlib\src\em_cmu.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emlib" Csub="DAC"     Cversion="4.0.0" condition="emlib CMU">
      <description>Digital to Analog Coversion (DAC) Peripheral</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_DAC
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emlib\doc\html\group__DAC.html"/>
        <file category="header"  name="emlib\inc\em_dac.h"/>
        <file category="source"  name="emlib\src\em_dac.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emlib" Csub="DBG"     Cversion="4.0.0" condition="emlib CMU GPIO">
      <description>Debug (DBG) Peripheral</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_DBG
      </RTE_Components_h>
      <files>
        <file category="header"  name="emlib\inc\em_dbg.h"/>
        <file category="source"  name="emlib\src\em_dbg.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emlib" Csub="DMA"     Cversion="4.0.0" condition="emlib CMU">
      <description>Direct Memory Access (DMA) Peripheral</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_DMA
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emlib\doc\html\group__DMA.html"/>
        <file category="header"  name="emlib\inc\em_dma.h"/>
        <file category="source"  name="emlib\src\em_dma.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emlib" Csub="EBI"     Cversion="4.0.0" condition="emlib Framework">
      <description>EBI External Bus Interface (EBI) Peripheral</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_EBI
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emlib\doc\html\group__EBI.html"/>
        <file category="header"  name="emlib\inc\em_ebi.h"/>
        <file category="source"  name="emlib\src\em_ebi.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emlib" Csub="EMU"     Cversion="4.0.0" condition="emlib CMU">
      <description>Energy Management Unit (EMU) Peripheral</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_EMU
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emlib\doc\html\group__EMU.html"/>
        <file category="header"  name="emlib\inc\em_emu.h"/>
        <file category="source"  name="emlib\src\em_emu.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emlib" Csub="GPIO"    Cversion="4.0.0" condition="emlib Framework">
      <description>General Purpose Input/Output (GPIO) Peripheral</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_GPIO
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emlib\doc\html\group__GPIO.html"/>
        <file category="header"  name="emlib\inc\em_gpio.h"/>
        <file category="source"  name="emlib\src\em_gpio.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emlib" Csub="I2C"     Cversion="4.0.0" condition="emlib CMU">
      <description>Inter-integrated Circuit (I2C) Peripheral</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_I2C
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emlib\doc\html\group__I2C.html"/>
        <file category="header"  name="emlib\inc\em_i2c.h"/>
        <file category="source"  name="emlib\src\em_i2c.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emlib" Csub="IDAC"    Cversion="4.0.0" condition="emlib CMU">
      <description>Current Digital to Analog Converter (IDAC) Peripheral</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_IDAC
      </RTE_Components_h>
      <files>
        <file category="header"  name="emlib\inc\em_idac.h"/>
        <file category="source"  name="emlib\src\em_idac.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emlib" Csub="INT"     Cversion="4.0.0" condition="emlib Framework">
      <description>Safe nesting interrupt disable/enable</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_INT
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emlib\doc\html\group__INT.html"/>
        <file category="header"  name="emlib\inc\em_int.h"/>
        <file category="source"  name="emlib\src\em_int.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emlib" Csub="LCD"     Cversion="4.0.0" condition="emlib Framework">
      <description>Liquid Crystal Display (LCD) Peripheral</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_LCD
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emlib\doc\html\group__LCD.html"/>
        <file category="header"  name="emlib\inc\em_lcd.h"/>
        <file category="source"  name="emlib\src\em_lcd.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emlib" Csub="LESENSE" Cversion="4.0.0" condition="emlib CMU">
      <description>Low Energy Sensor (LESENSE) Peripheral</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_LESENSE
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emlib\doc\html\group__LESENSE.html"/>
        <file category="header"  name="emlib\inc\em_lesense.h"/>
        <file category="source"  name="emlib\src\em_lesense.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emlib" Csub="LETIMER" Cversion="4.0.0" condition="emlib CMU">
      <description>Low Energy Timer (LETIMER) Peripheral</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_LETIMER
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emlib\doc\html\group__LETIMER.html"/>
        <file category="header"  name="emlib\inc\em_letimer.h"/>
        <file category="source"  name="emlib\src\em_letimer.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emlib" Csub="LEUART"  Cversion="4.0.0" condition="emlib CMU">
      <description>Low Energy Universal Asynchronous Receiver/Transmitter (LEUART) Peripheral</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_LEUART
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emlib\doc\html\group__LEUART.html"/>
        <file category="header"  name="emlib\inc\em_leuart.h"/>
        <file category="source"  name="emlib\src\em_leuart.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emlib" Csub="MPU"     Cversion="4.0.0" condition="emlib Framework">
      <description>Memory Protection Unit (MPU) Peripheral</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_MPU
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emlib\doc\html\group__MPU.html"/>
        <file category="header"  name="emlib\inc\em_mpu.h"/>
        <file category="source"  name="emlib\src\em_mpu.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emlib" Csub="MSC"     Cversion="4.0.0" condition="emlib CMU INT">
      <description>Flash controller (MSC) Peripheral</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_MSC
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emlib\doc\html\group__MSC.html"/>
        <file category="header"  name="emlib\inc\em_msc.h"/>
        <file category="source"  name="emlib\src\em_msc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emlib" Csub="OPAMP"   Cversion="4.0.0" condition="emlib SYSTEM">
      <description>Operational Amplifier (OPAMP) Peripheral</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_OPAMP
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emlib\doc\html\group__OPAMP.html"/>
        <file category="header"  name="emlib\inc\em_opamp.h"/>
        <file category="source"  name="emlib\src\em_opamp.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emlib" Csub="PCNT"    Cversion="4.0.0" condition="emlib CMU">
      <description>Pulse Counter (PCNT) Peripheral</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_PCNT
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emlib\doc\html\group__PCNT.html"/>
        <file category="header"  name="emlib\inc\em_pcnt.h"/>
        <file category="source"  name="emlib\src\em_pcnt.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emlib" Csub="PRS"     Cversion="4.0.0" condition="emlib Framework">
      <description>Peripheral Reflex System (PRS) Peripheral</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_PRS
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emlib\doc\html\group__PRS.html"/>
        <file category="header"  name="emlib\inc\em_prs.h"/>
        <file category="source"  name="emlib\src\em_prs.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emlib" Csub="RMU"     Cversion="4.0.0" condition="emlib Framework">
      <description>Reset Management Unit (RMU) Peripheral</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_RMU
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emlib\doc\html\group__RMU.html"/>
        <file category="header"  name="emlib\inc\em_rmu.h"/>
        <file category="source"  name="emlib\src\em_rmu.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emlib" Csub="RTC"     Cversion="4.0.0" condition="emlib Framework">
      <description>Real Time Counter (RTC) Peripheral</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_RTC
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emlib\doc\html\group__RTC.html"/>
        <file category="header"  name="emlib\inc\em_rtc.h"/>
        <file category="source"  name="emlib\src\em_rtc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emlib" Csub="SYSTEM"  Cversion="4.0.0" condition="emlib Framework">
      <description>System Peripheral </description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_SYSTEM
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emlib\doc\html\group__SYSTEM.html"/>
        <file category="header"  name="emlib\inc\em_system.h"/>
        <file category="source"  name="emlib\src\em_system.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emlib" Csub="TIMER"   Cversion="4.0.0" condition="emlib Framework">
      <description>Timer/Counter (TIMER) Peripheral</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_TIMER
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emlib\doc\html\group__TIMER.html"/>
        <file category="header"  name="emlib\inc\em_timer.h"/>
        <file category="source"  name="emlib\src\em_timer.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emlib" Csub="USART"   Cversion="4.0.0" condition="emlib CMU">
      <description>Universal Synchronous/Asynchronous Receiver/Transmitter (USART) Peripheral</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_USART
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emlib\doc\html\group__USART.html"/>
        <file category="header"  name="emlib\inc\em_usart.h"/>
        <file category="source"  name="emlib\src\em_usart.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emlib" Csub="VCMP"    Cversion="4.0.0" condition="emlib Framework">
      <description>Voltage Comparator (VCMP) Peripheral</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_VCMP
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emlib\doc\html\group__VCMP.html"/>
        <file category="header"  name="emlib\inc\em_vcmp.h"/>
        <file category="source"  name="emlib\src\em_vcmp.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emlib" Csub="WDOG"    Cversion="4.0.0" condition="emlib Framework">
      <description>Watchdog (WDOG) Peripheral</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMLIB_WDOG
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emlib\doc\html\group__WDOG.html"/>
        <file category="header"  name="emlib\inc\em_wdog.h"/>
        <file category="source"  name="emlib\src\em_wdog.c"/>
      </files>
    </component>

    <!-- emdrv EFM32TG -->
<!-- emdrv Component not added
    <component Cclass="Device" Cgroup="emdrv" Csub="DMADRV" Cversion="4.0.0" condition="emdrv DMADRV">
      <description>Direct Memory Access Driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMDRV_DMADRV
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emdrv\emdrvdoc\html\group__DMADRV.html"/>
        <file category="include" name="emdrv\common\inc\"/>
        <file category="header"  name="emdrv\config\dmadrv_config.h" attr="config" version="4.0.0"/>
        <file category="header"  name="emdrv\dmadrv\inc\dmadrv.h"/>
        <file category="source"  name="emdrv\dmadrv\src\dmadrv.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emdrv" Csub="GPIOINT" Cversion="4.0.0" condition="emdrv GPIOINT">
      <description>General Purpose Input/Output Interrupt dispatcher</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMDRV_GPIOINT
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emdrv\emdrvdoc\html\group__GPIOINT.html"/>
        <file category="include" name="emdrv\common\inc\"/>
        <file category="header"  name="emdrv\gpiointerrupt\inc\gpiointerrupt.h"/>
        <file category="source"  name="emdrv\gpiointerrupt\src\gpiointerrupt.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emdrv" Csub="NVM" Cversion="4.0.0" condition="emdrv NVM">
      <description>Non-volatile Memory Driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMDRV_NVM
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emdrv\emdrvdoc\html\group__NVM.html"/>
        <file category="include" name="emdrv\common\inc\"/>
        <file category="header"  name="emdrv\config\nvm_config.h" attr="config" version="4.0.0"/>
        <file category="source"  name="emdrv\config\nvm_config.c"/>
        <file category="header"  name="emdrv\nvm\inc\nvm.h"/>
        <file category="source"  name="emdrv\nvm\src\nvm.c"/>
        <file category="source"  name="emdrv\nvm\src\nvm_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emdrv" Csub="RTCDRV" Cversion="4.0.0" condition="emdrv RTCDRV">
      <description>Real Time Clock Timer Driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMDRV_RTCDRV
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emdrv\emdrvdoc\html\group__RTCDRV.html"/>
        <file category="include" name="emdrv\common\inc\"/>
        <file category="header"  name="emdrv\config\rtcdrv_config.h" attr="config" version="4.0.0"/>
        <file category="header"  name="emdrv\rtcdrv\inc\rtcdriver.h"/>
        <file category="source"  name="emdrv\rtcdrv\src\rtcdriver.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emdrv" Csub="SLEEP" Cversion="4.0.0" condition="emdrv SLEEP">
      <description>Sleep Driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMDRV_SLEEP
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emdrv\emdrvdoc\html\group__SLEEP.html"/>
        <file category="include" name="emdrv\common\inc\"/>
        <file category="header"  name="emdrv\sleep\inc\sleep.h"/>
        <file category="source"  name="emdrv\sleep\src\sleep.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emdrv" Csub="SPIDRV" Cversion="4.0.0" condition="emdrv SPIDRV">
      <description>Serial Peripheral Interface Driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMDRV_SPIDRV
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emdrv\emdrvdoc\html\group__SPIDRV.html"/>
        <file category="include" name="emdrv\common\inc\"/>
        <file category="header"  name="emdrv\config\spidrv_config.h" attr="config" version="4.0.0"/>
        <file category="header"  name="emdrv\spidrv\inc\spidrv.h"/>
        <file category="source"  name="emdrv\spidrv\src\spidrv.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emdrv" Csub="UARTDRV" Cversion="4.0.0" condition="emdrv UARTDRV">
      <description>Universal Asynchronous Receiver/Transmitter Driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMDRV_UARTDRV
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emdrv\emdrvdoc\html\group__UARTDRV.html"/>
        <file category="include" name="emdrv\common\inc\"/>
        <file category="header"  name="emdrv\config\uartdrv_config.h" attr="config" version="4.0.0"/>
        <file category="header"  name="emdrv\uartdrv\inc\uartdrv.h"/>
        <file category="source"  name="emdrv\uartdrv\src\uartdrv.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="emdrv" Csub="USTIMER" Cversion="4.0.0" condition="emdrv USTIMER">
      <description>Micro Second Timer Driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_EMDRV_USTIMER
      </RTE_Components_h>
      <files>
        <file category="doc"     name="emdrv\emdrvdoc\html\group__USTIMER.html"/>
        <file category="include" name="emdrv\common\inc\"/>
        <file category="header"  name="emdrv\config\ustimer_config.h" attr="config" version="4.0.0"/>
        <file category="header"  name="emdrv\ustimer\inc\ustimer.h"/>
        <file category="source"  name="emdrv\ustimer\src\ustimer.c"/>
      </files>
    </component>
emdrv Component not added -->

<!-- glib graphics bundle not added -->

    <bundle Cbundle="EFM32TG-STK3300" Cclass="Board Support" Cversion="4.0.0">
      <description>Silicon Labs EFM32TG-STK3300 Development Kit</description>
      <doc>Boards\SiliconLabs\EFM32TG_STK3300\Documents\efm32_tiny_gecko_stk_user_manual.pdf</doc>

      <component Cgroup="CORE" condition="EFM32TG BSP core">
        <description>Silicon Labs BSP Core</description>
        <RTE_Components_h>
          #define RTE_BOARD_SUPPORT_STK3300
        </RTE_Components_h>
        <files>
          <file category="doc"     name="Boards\SiliconLabs\common\bspdoc\html\index.html"/>
          <file category="header"  name="Boards\SiliconLabs\common\bsp\bsp.h"/>
          <file category="source"  name="Boards\SiliconLabs\common\bsp\bsp_bcc.c"/>
          <file category="source"  name="Boards\SiliconLabs\common\bsp\bsp_stk.c"/>
          <file category="source"  name="Boards\SiliconLabs\common\bsp\bsp_stk_leds.c"/>
          <file category="header"  name="Boards\SiliconLabs\common\bsp\bsp_trace.h"/>
          <file category="source"  name="Boards\SiliconLabs\common\bsp\bsp_trace.c"/>
          <file category="include" name="Boards\SiliconLabs\EFM32TG_STK3300\config\"/>
        </files>
      </component>
<!-- start BSP driver
      <component Cgroup="Drivers" Csub="CapSense" Cvariant="Standard" condition="BSP Driver CapSense">
        <description>CapSense Driver</description>
        <RTE_Components_h>
          #define RTE_BOARD_SUPPORT_DRIVERS_CAPSENSE
        </RTE_Components_h>
        <files>
          <file category="doc"     name="Boards\SiliconLabs\common\bspdoc\html\group__CapSense.html"/>
          <file category="header"  name="Boards\SiliconLabs\common\drivers\capsense.h"/>
          <file category="source"  name="Boards\SiliconLabs\common\drivers\capsense.c"/>
        </files>
      </component>
      <component Cgroup="Drivers" Csub="CapSense"   Cvariant="Low Energy"    condition="BSP Driver CapSense LE">
        <description>CapSense Driver (Low Energy)</description>
        <RTE_Components_h>
          #define RTE_BOARD_SUPPORT_DRIVERS_CAPSENSE_LE
        </RTE_Components_h>
        <files>
          <file category="doc"     name="Boards\SiliconLabs\common\bspdoc\html\group__CapSense.html"/>
          <file category="header"  name="Boards\SiliconLabs\common\drivers\caplesense.h"/>
          <file category="source"  name="Boards\SiliconLabs\common\drivers\caplesense.c"/>
        </files>
      </component>
      <component Cgroup="Drivers" Csub="Display"                             condition="BSP Driver Display">
        <description>Display Driver</description>
        <RTE_Components_h>
          #define RTE_BOARD_SUPPORT_DRIVERS_DISPLAY
        </RTE_Components_h>
        <files>
          <file category="doc"     name="Boards\SiliconLabs\common\bspdoc\html\group__Display.html"/>
          <file category="include" name="glib\"/>
          <file category="header"  name="Boards\SiliconLabs\common\drivers\display.h"/>
          <file category="source"  name="Boards\SiliconLabs\common\drivers\display.c"/>
          <file category="source"  name="Boards\SiliconLabs\common\drivers\displaypalemlib.c"/>
          <file category="source"  name="Boards\SiliconLabs\common\drivers\displayls013b7dh03.c"/>
        </files>
      </component>
      <component Cgroup="Drivers" Csub="DmaCtrl"                             condition="BSP Driver DmaCtrl">
        <description>DmaCtrl Driver</description>
        <RTE_Components_h>
          #define RTE_BOARD_SUPPORT_DRIVERS_DMACTRL
        </RTE_Components_h>
        <files>
          <file category="doc"     name="Boards\SiliconLabs\common\bspdoc\html\group__DmaCtrl.html"/>
          <file category="header"  name="Boards\SiliconLabs\common\drivers\dmactrl.h"/>
          <file category="source"  name="Boards\SiliconLabs\common\drivers\dmactrl.c"/>
        </files>
      </component>
      <component Cgroup="Drivers" Csub="NandFlash"                           condition="BSP Driver NandFlash">
        <description>NandFlash Driver</description>
        <RTE_Components_h>
          #define RTE_BOARD_SUPPORT_DRIVERS_NANDFLASH
        </RTE_Components_h>
        <files>
          <file category="doc"     name="Boards\SiliconLabs\common\bspdoc\html\group__NandFlash.html"/>
          <file category="header"  name="Boards\SiliconLabs\common\drivers\nandflash.h"/>
          <file category="source"  name="Boards\SiliconLabs\common\drivers\nandflash.c"/>
        </files>
      </component>
      <component Cgroup="Drivers" Csub="RetargetIo" Cvariant="Serial"        condition="BSP Driver RetargetIo Serial">
        <description>RetargetIo Driver (Serial)</description>
        <RTE_Components_h>
          #define RTE_BOARD_SUPPORT_DRIVERS_RETARGETIO_SERIAL
        </RTE_Components_h>
        <files>
          <file category="doc"     name="Boards\SiliconLabs\common\bspdoc\html\group__RetargetIo.html"/>
          <file category="source"  name="Boards\SiliconLabs\common\drivers\retargetio.c"/>
          <file category="header"  name="Boards\SiliconLabs\common\drivers\retargetserial.h"/>
          <file category="source"  name="Boards\SiliconLabs\common\drivers\retargetserial.c"/>
        </files>
      </component>
      <component Cgroup="Drivers" Csub="RetargetIo" Cvariant="TextDisplay"   condition="BSP Driver RetargetIo TextDisplay">
        <description>RetargetIo Driver (TextDisplay)</description>
        <RTE_Components_h>
          #define RTE_BOARD_SUPPORT_DRIVERS_RETARGETIO_TEXTDISPLAY
        </RTE_Components_h>
        <files>
          <file category="doc"     name="Boards\SiliconLabs\common\bspdoc\html\group__RetargetIo.html"/>
          <file category="source"  name="Boards\SiliconLabs\common\drivers\retargetio.c"/>
          <file category="header"  name="Boards\SiliconLabs\common\drivers\retargettextdisplay.h"/>
          <file category="source"  name="Boards\SiliconLabs\common\drivers\retargettextdisplay.c"/>
        </files>
      </component>
      <component Cgroup="Drivers" Csub="RtcDrv"                              condition="BSP Driver RtcDrv">
        <description>RtcDrv Driver</description>
        <RTE_Components_h>
          #define RTE_BOARD_SUPPORT_DRIVERS_RTCDRV
        </RTE_Components_h>
        <files>
          <file category="doc"     name="Boards\SiliconLabs\common\bspdoc\html\group__RtcDrv.html"/>
          <file category="header"  name="Boards\SiliconLabs\common\drivers\rtcdrv.h"/>
          <file category="source"  name="Boards\SiliconLabs\common\drivers\rtcdrv.c"/>
        </files>
      </component>
      <component Cgroup="Drivers" Csub="SegmentLcd"                          condition="BSP Driver SegmentLcd">
        <description>SegmentLcd Driver</description>
        <RTE_Components_h>
          #define RTE_BOARD_SUPPORT_DRIVERS_SEGMENTLCD
        </RTE_Components_h>
        <files>
          <file category="doc"     name="Boards\SiliconLabs\common\bspdoc\html\group__SegmentLcd.html"/>
          <file category="header"  name="Boards\SiliconLabs\common\drivers\segmentlcd.h"/>
          <file category="source"  name="Boards\SiliconLabs\common\drivers\segmentlcd.c"/>
        </files>
      </component>
      <component Cgroup="Drivers" Csub="TextDisplay"                         condition="BSP Driver TextDisplay">
        <description>TextDisplay Driver</description>
        <RTE_Components_h>
          #define RTE_BOARD_SUPPORT_DRIVERS_TEXTDISPLAY
        </RTE_Components_h>
        <files>
          <file category="doc"     name="Boards\SiliconLabs\common\bspdoc\html\group__Textdisplay.html"/>
          <file category="header"  name="Boards\SiliconLabs\common\drivers\textdisplay.h"/>
          <file category="source"  name="Boards\SiliconLabs\common\drivers\textdisplay.c"/>
        </files>
      </component>
      <component Cgroup="Drivers" Csub="Udelay"                              condition="BSP Driver Udelay">
        <description>Udelay Driver</description>
        <RTE_Components_h>
          #define RTE_BOARD_SUPPORT_DRIVERS_UDELAY
        </RTE_Components_h>
        <files>
          <file category="doc"     name="Boards\SiliconLabs\common\bspdoc\html\group__Udelay.html"/>
          <file category="header"  name="Boards\SiliconLabs\common\drivers\udelay.h"/>
          <file category="source"  name="Boards\SiliconLabs\common\drivers\udelay.c"/>
        </files>
      </component>
      <component Cgroup="Drivers" Csub="VddCheck"                            condition="BSP Driver VddCheck">
        <description>VddCheck Driver</description>
        <RTE_Components_h>
          #define RTE_BOARD_SUPPORT_DRIVERS_VDDCHECK
        </RTE_Components_h>
        <files>
          <file category="doc"     name="Boards\SiliconLabs\common\bspdoc\html\group__VddCheck.html"/>
          <file category="header"  name="Boards\SiliconLabs\common\drivers\vddcheck.h"/>
          <file category="source"  name="Boards\SiliconLabs\common\drivers\vddcheck.c"/>
        </files>
      </component>
end BSP driver -->

      <component Cgroup="LED" condition="EFM32TG BSP">
        <description>LED interface for Silicon Labs EFM32TG-STK3300 Development Kit</description>
        <files>
          <file category="source"  name="Boards\SiliconLabs\EFM32TG_STK3300\Common\LED_STK3300.c"/>
        </files>
      </component>
      <component Cgroup="Buttons" condition="EFM32TG BSP">
        <description>Buttons interface for Silicon Labs EFM32TG-STK3300 Development Kit</description>
        <files>
          <file category="source"  name="Boards\SiliconLabs\EFM32TG_STK3300\Common\Buttons_STK3300.c"/>
        </files>
      </component>
    </bundle>
  </components>

  <boards>
    <board vendor="Silicon Labs" name="EFM32TG-STK3300" revision="Ver 1.0">
      <description>Silicon Labs EFM32TG Starter Kit</description>
      <image small="Boards\SiliconLabs\EFM32TG_STK3300\Documents\efm32tg-stk3300_small.jpg"
             large="Boards\SiliconLabs\EFM32TG_STK3300\Documents\efm32tg-stk3300_large.jpg"/>
      <book category="manual"    name="Boards\SiliconLabs\EFM32TG_STK3300\Documents\efm32_tiny_gecko_stk_user_manual.pdf" title="User Manual"/>
      <mountedDevice    deviceIndex="0" Dvendor="Silicon Labs:21" Dname="EFM32TG990F256"/>
      <compatibleDevice deviceIndex="0" Dvendor="Silicon Labs:21" DsubFamily="EFM32TG990"/>
      <feature type="Button"     n="3"             name="Push-buttons: Reset, 2x User"/>
      <feature type="LED"        n="6"             name="LEDs: 4x Status, 1x User"/>
      <feature type="DIO"                          name="Breakout pads for easy access to I/O pins"/>
      <feature type="DIO"                          name="20 pin expansion header"/>
      <feature type="Touch"      n="1"             name="Capacitive touch slider"/>
      <feature type="LCD"        n="1"  m="8.20"   name="160 segment Energy Micro LCD"/>
      <feature type="LightSens"  n="1"             name="Ambient Light Sensor"/>
      <feature type="PWR"        n="5"             name="USB Powered"/>
      <feature type="Batt"       n="1"             name="CR2032 battery"/>
      <feature type="ODbg"       n="1"             name="Onboard SEGGER J-Link USB debugger"/>
    </board>
  </boards>

  <examples>
    <example name="CMSIS-RTOS Blinky" doc="Abstract.txt" folder="Boards\SiliconLabs\EFM32TG_STK3300\Blinky">
      <description>CMSIS-RTOS based Blinky example</description>
      <board name="EFM32TG-STK3300" vendor="Silicon Labs"/>
      <project>
        <environment name="uv" load="Blinky.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="CMSIS" Cgroup="CORE"/>
        <component Cclass="Device" Cgroup="Startup"/>
        <component Cclass="CMSIS" Cgroup="RTOS"/>
        <category>Getting Started</category>
        <category>CMSIS-RTX</category>
      </attributes>
    </example>
  </examples>

</package>
